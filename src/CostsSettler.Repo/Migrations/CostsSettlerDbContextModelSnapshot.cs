// <auto-generated />
using System;
using CostsSettler.Repo;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CostsSettler.Repo.Migrations
{
    [DbContext(typeof(CostsSettlerDbContext))]
    partial class CostsSettlerDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CostsSettler.Domain.Models.Circumstance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte>("CircumstanceStatus")
                        .HasColumnType("tinyint");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.ToTable("Circumstances", (string)null);
                });

            modelBuilder.Entity("CostsSettler.Domain.Models.MemberCharge", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(10,2)");

                    b.Property<byte>("ChargeStatus")
                        .HasColumnType("tinyint");

                    b.Property<Guid>("CircumstanceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte>("CircumstanceRole")
                        .HasColumnType("tinyint");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CircumstanceId");

                    b.ToTable("MemberCharges", (string)null);
                });

            modelBuilder.Entity("CostsSettler.Domain.Models.MemberCharge", b =>
                {
                    b.HasOne("CostsSettler.Domain.Models.Circumstance", "Circumstance")
                        .WithMany("Members")
                        .HasForeignKey("CircumstanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Circumstance");
                });

            modelBuilder.Entity("CostsSettler.Domain.Models.Circumstance", b =>
                {
                    b.Navigation("Members");
                });
#pragma warning restore 612, 618
        }
    }
}
