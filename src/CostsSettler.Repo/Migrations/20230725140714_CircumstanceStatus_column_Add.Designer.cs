// <auto-generated />
using System;
using CostsSettler.Repo;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CostsSettler.Repo.Migrations
{
    [DbContext(typeof(CostsSettlerDbContext))]
    [Migration("20230725140714_CircumstanceStatus_column_Add")]
    partial class CircumstanceStatus_column_Add
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CostsSettler.Domain.Models.Charge", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(10,2)");

                    b.Property<byte>("ChargeStatus")
                        .HasColumnType("tinyint");

                    b.Property<Guid>("CircumstanceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreditorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DebtorId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CircumstanceId");

                    b.ToTable("Charges");
                });

            modelBuilder.Entity("CostsSettler.Domain.Models.Circumstance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte>("CircumstanceStatus")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.ToTable("Circumstances");
                });

            modelBuilder.Entity("CostsSettler.Domain.Models.Charge", b =>
                {
                    b.HasOne("CostsSettler.Domain.Models.Circumstance", "Circumstance")
                        .WithMany("Charges")
                        .HasForeignKey("CircumstanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Circumstance");
                });

            modelBuilder.Entity("CostsSettler.Domain.Models.Circumstance", b =>
                {
                    b.Navigation("Charges");
                });
#pragma warning restore 612, 618
        }
    }
}
